name: RocksDB Tests (Conda)

# This workflow tests full RocksDB backends using conda-forge
# It's separate from main CI due to RocksDB pip compatibility issues

on:
  push:
    branches: [ main ]
    paths:
      - 'src/partitioncache/cache_handler/rocks_db_*.py'
      - 'tests/**/test_*rocks*.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/partitioncache/cache_handler/rocks_db_*.py'
      - 'tests/**/test_*rocks*.py'
  workflow_dispatch:  # Allow manual triggering

env:
  CI: true
  PYTHON_VERSION: "3.12"
  # Database settings (still needed for queue)
  PG_HOST: localhost
  PG_PORT: 5432
  PG_USER: test_user
  PG_PASSWORD: test_password
  PG_DBNAME: test_db
  QUERY_QUEUE_PROVIDER: postgresql
  PG_QUEUE_HOST: localhost
  PG_QUEUE_PORT: 5432
  PG_QUEUE_USER: test_user
  PG_QUEUE_PASSWORD: test_password
  PG_QUEUE_DBNAME: test_db

jobs:
  rocksdb-tests:
    name: RocksDB Tests (${{ matrix.cache-handler.name }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        cache-handler:
          - name: "rocksdb-set"
            backend: "rocks_db_set"
            table_prefix: "pcache_rocks_test"
            path: "/tmp/rocksdb_test_set"
          - name: "rocksdb-bit"
            backend: "rocks_db_bit"
            table_prefix: "pcache_rocks_bit_test"
            path: "/tmp/rocksdb_test_bit"

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    env:
      CACHE_BACKEND: ${{ matrix.cache-handler.backend }}
      ROCKS_DB_PATH: ${{ matrix.cache-handler.path }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: '1.5.8'
        environment-file: .github/micromamba-env.yml
        init-shell: >-
          bash
        cache-environment: true
        post-cleanup: 'all'

    - name: Install Python dependencies
      shell: micromamba-shell {0}
      run: |
        pip install -e ".[testing,db]"
        # Install RocksDB from conda-forge
        micromamba install -c conda-forge rocksdb

    - name: Wait for PostgreSQL
      run: |
        for i in {1..30}; do
          if python -c "import psycopg; psycopg.connect('postgresql://test_user:test_password@localhost:5432/test_db')" 2>/dev/null; then
            echo "PostgreSQL is ready"
            break
          fi
          echo "Waiting for PostgreSQL... ($i/30)"
          sleep 2
        done

    - name: Setup PartitionCache tables
      shell: micromamba-shell {0}
      run: |
        python -m partitioncache.cli.manage_cache setup all

    - name: Run RocksDB-specific tests
      shell: micromamba-shell {0}
      run: |
        # Test the specific RocksDB backend
        python -m pytest tests/integration/test_cache_backends.py \
          -v --tb=short --timeout=300 \
          -k "test_${{ matrix.cache-handler.backend }}"
        
        # Test RocksDB cache handler unit tests
        python -m pytest tests/pytest/ \
          -v --tb=short --timeout=60 \
          -k "rocks_db" || echo "No RocksDB unit tests found"

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rocksdb-test-results-${{ matrix.cache-handler.name }}
        path: |
          pytest-results.xml
          ${{ matrix.cache-handler.path }}
        retention-days: 7