[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "partitioncache"
version = "0.6.0"
description = "A partition cache implementation"
requires-python = ">=3.10"
license = { text = "LGPL-3.0-or-later" }
dependencies = [
    "networkx",
    "sqlglot>=25.0.0,<26.0.0",
    "bitarray",
    "pyroaring",
    "python-dotenv",
    "tqdm",
]

[project.optional-dependencies]
testing = [
    "pytest",
    "pytest-timeout",
    "tox",
    "ruff",
    "pytest-cov",
    "pytest-mock",
    "mypy",
    "filelock",
    "types-tqdm",
]

db = [
    "psycopg",
    "rocksdict",
    "redis",
    "duckdb",
    "mysql-connector-python",
]

rocksdb = [
    "rocksdb",  # Seperate because it is not available on all platforms
]

[project.urls]
homepage = "https://github.com/MPoppinga/PartitionCache"
repository = "https://github.com/MPoppinga/PartitionCache"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"partitioncache" = ["py.typed", "**/*.sql"]

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
license-files = ["COPYING", "COPYING.LESSER"]

[tool.pytest.ini_options]
testpaths = ["tests"]
timeout = 300  # 5 minutes maximum per test
timeout_method = "thread"

[project.scripts]
pcache-manage = "partitioncache.cli.manage_cache:main"
pcache-add = "partitioncache.cli.add_to_cache:main"
pcache-read = "partitioncache.cli.read_from_cache:main"
pcache-monitor = "partitioncache.cli.monitor_cache_queue:main"
pcache-postgresql-queue-processor = "partitioncache.cli.postgresql_queue_processor:main"
pcache-postgresql-eviction-manager = "partitioncache.cli.postgresql_cache_eviction:main"

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_unreachable = true
warn_return_any = true

[tool.ruff]
line-length = 160
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011"]